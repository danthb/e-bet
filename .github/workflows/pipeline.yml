name: Pipeline CI GitFlow
on:
  push:
    branches: [ develop ]
# Job para realizar la verificacion de pruebas y coverage
jobs:
  regression_tests:
    name: Pruebas de Regression
    runs-on: ubuntu-latest
    steps:
    - name: Checkout del repositorio
      uses: actions/checkout@v2
    - name: Configuración de entorno de python
      uses: actions/setup-python@v2
      with:
          python-version: '3.7'
    - name: Instalación de librerías y dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Ejecución de Pruebas Unitarias
      id: correr-pruebas
      run: python -m unittest discover -s tests -v
    - name: Validacion de Resultados con Errores
      if: ${{ failure() }}
      env:
        MENSAJE_ERROR: Una o varias pruebas fallaron durante la ejecución
      run: echo "::set-output name=resultado_pruebas::${MENSAJE_ERROR}"
    - name: Validacion Resultados sin Errores
      if: ${{ success() }}
      env:
        MENSAJE_EXITO: Todas las pruebas fueron exitosas durant su ejecución
      run: echo "::set-output name=resultado_pruebas::${MENSAJE_EXITO}"
  # Job para la creación de rama de Release a partir del ultimo commit
  release_branch:
    name: Creación Nueva Rama Release
    needs: regression_tests
    if: ${{ startsWith(github.event.head_commit.message, 'release') }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout del repositorio
      uses: actions/checkout@v2
    - name: Creación de Rama del Nuevo Release
      id: creacion_rama_release
      env:
        BRANCH_NAME: ${{ github.event.head_commit.message }}
      run: | 
        git checkout -b ${BRANCH_NAME} 
        git push -f -u origin ${BRANCH_NAME}
    - name: Validación Creación Nueva Rama Release
      id: validacion-nueva-rama
      env:
        BRANCH_RESULT: ${{ startsWith(github.event.head_commit.message, 'release') }}
        BRANCH_NAME: ${{ github.event.head_commit.message }}
      run: |
        echo "::set-output name=resultado_rama::${BRANCH_RESULT}"
        echo "::set-output name=nueva_rama::${BRANCH_NAME}"
    outputs:
      resultado_rama_release: ${{ startsWith(github.event.head_commit.message, 'release') }}
      nombre_rama_release: ${{ github.event.head_commit.message }}
  # Job para hacer el merge automatico
  release_automerge:
    name: Merge de la Rama Release con Main
    needs: release_branch
    if: ${{ startsWith(github.event.head_commit.message, 'release') }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout del repositorio
      uses: actions/checkout@v2
    - name: Validación de Creación Rama Release
      env:
        RELEASE_BRANCH_CREATED: ${{ needs.release_branch.outputs.resultado_rama_release }}
        RELEASE_BRANCH_NAME: ${{ needs.release_branch.outputs.nombre_rama_release }}
      run: |
        echo "::set-output name=resultado_rama::${RELEASE_BRANCH_CREATED}"
        echo "::set-output name=nombre_rama::${RELEASE_BRANCH_NAME}"
    - name: Merge de la Rama Release a Main
      uses: tukasz/direct-merge-action@master
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        source-branch: ${{ needs.release_branch.outputs.nombre_rama_release }}
        target-branch: main